<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stores">
	<!-- 식당 리스트 저전체보기 -->
	<select id="findByAll" resultType="data.Restaurants">
		SELECT * FROM RESTAURANTS
	</select>
	<!-- 식당 전체 갯수 가져오기 -->
	<select id="countStore" resultType="int">
		SELECT COUNT(*) FROM
		RESTAURANTS
	</select>
	<!-- 식당 리스트 stars 정렬 보기 -->
	<select id="starSort" resultType="data.Restaurants"
		parameterType="hashmap">
		select * from
		(SELECT ROWNUM RN, t.* FROM
		(SELECT
		restaurants.*,
		CASE WHEN stores.stars IS NULL THEN 0 ELSE stores.stars
		/ cnt END AS
		stars,
		CASE WHEN stores.cnt IS NULL THEN 0 ELSE stores.cnt
		END AS cnt
		FROM restaurants
		LEFT JOIN stores ON restaurants.id =
		stores.id
		ORDER BY
		stars desc)t
		)WHERE RN BETWEEN #{a} AND #{b}
	</select>
	
	<select id="cntSort" resultType="data.Restaurants"
		parameterType="hashmap">
		select * from
		(SELECT ROWNUM RN, t.* FROM
		(SELECT
		restaurants.*,
		CASE WHEN stores.stars IS NULL THEN 0 ELSE stores.stars
		/ cnt END AS
		stars,
		CASE WHEN stores.cnt IS NULL THEN 0 ELSE stores.cnt
		END AS cnt
		FROM restaurants
		LEFT JOIN stores ON restaurants.id =
		stores.id
		ORDER BY
		cnt desc)t
		)WHERE RN BETWEEN #{a} AND #{b}
	</select>
	
	<select id="findByAtoB" resultType="data.Restaurants"
		parameterType="hashmap">
		select * from
		(SELECT ROWNUM RN, t.* FROM
		(SELECT
		restaurants.*,
		CASE WHEN stores.stars IS NULL THEN 0 ELSE stores.stars
		/ cnt END AS
		stars,
		CASE WHEN stores.cnt IS NULL THEN 0 ELSE stores.cnt
		END AS cnt
		FROM restaurants
		LEFT JOIN stores ON restaurants.id =
		stores.id
		ORDER BY
		restaurants.id desc)t
		)WHERE RN BETWEEN #{a} AND #{b}
	</select>
	<!-- 식당 리뷰및 추천순 보기 -->
</mapper>